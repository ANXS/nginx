# file: nginx/tasks/source.yml

- include: user.yml
- include: directories.yml

- name: Nginx | Make sure the Nginx build dependencies are installed
  apt:
    update_cache: yes
    pkg: "{{item}}"
    state: present
  with_items:
    - libpcre3
    - libpcre3-dev
    - libssl-dev

- name: Nginx | Download the Nginx source release if not yet present
  get_url:
    url: "{{nginx_source_url}}"
    dest: "/tmp/nginx-{{nginx_source_version}}.tar.gz"

- include: "modules.yml"

- name: Nginx | Unpack the compressed Nginx source
  command: tar -xvzf /tmp/nginx-{{nginx_source_version}}.tar.gz
           chdir=/tmp creates=/tmp/nginx-{{nginx_source_version}}/README

- name: Nginx | Write out the version and flags used for the build
  template:
    src: .nginx_compilation_flags.j2
    dest: "{{nginx_dir}}/.nginx_compilation_flags"
  register: nginx_flags

- name: Nginx | Kill Nginx (old threads)
  command: pkill nginx
  ignore_errors: yes
  when: nginx_flags.changed

- name: Nginx | Compile the Nginx source
  shell: >
    cd /tmp/nginx-{{nginx_source_version}} &&
    ./configure {{nginx_source_configure_flags}} &&
    make &&
    make install
  when: nginx_flags.changed

- name: Nginx | Update the symbolic link to the nginx install
  file:
    path: /usr/local/nginx/default
    src: "{{nginx_source_prefix}}"
    state: link
    force: yes

- name: Nginx | Install the upstart init script
  template:
    src: nginx.init.j2
    dest: /etc/init.d/nginx
    owner: root
    group: root
    mode: 0755
  notify:
    - restart nginx

- name: Nginx | Register Nginx as a service
  service:
    name: nginx
    enabled: yes
